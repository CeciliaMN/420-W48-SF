@startuml dc_DetecteurDistance
skinparam maxMessageSize 50

abstract class Tache {
    + void tick() {abstract}
}

class Program {
    - m_detecteurDistrane : DetecteurDistance *
    + ctor()
    + void loop()
}

abstract class DetecteurDistance {
    + double obtenirDistanceMetres() {abstract}
}

abstract class DetecteurDistanceUltrason {
    
}

class DetecteurDistanceHCSR04 {
    - m_pinTrigger : int
    - m_pinEcho : int

    + ctor(p_pinTrigger : int, int p_pinEcho : int)
    + double obtenirDistanceMetres()
}

abstract class Action {
    + void executer() {abstract}
}

class ActionActionAlerte {
    - m_rouge : DEL*
    - m_jaune : DEL*
    - m_verte : DEL*
    + void executer()
}

class ActionAvertissement {
    - m_rouge : DEL*
    - m_jaune : DEL*
    - m_verte : DEL*
    + void executer()

}

class ActionSecuritaire {
    - m_rouge : DEL*
    - m_jaune : DEL*
    - m_verte : DEL*
    + void executer()
}

DetecteurDistance <|-- DetecteurDistanceUltrason
DetecteurDistanceUltrason <|-- DetecteurDistanceHCSR04

Action <|-- ActionActionAlerte
Action <|-- ActionAvertissement
Action <|-- ActionSecuritaire

class DEL {
    - m_pin : uint8_t
    + ctor(p_pin : uint8_t)
    + allumer()
    + eteindre()
}

DEL "1" <-- "1" ActionActionAlerte
DEL "1" <-- "1" ActionAvertissement
DEL "1" <-- "1" ActionSecuritaire


Program "1" -left-> "1" AlerteDistance

class AlerteDistance {
    - m_detecteurDistance : DetecteurDistance*
    - m_distanceAlerte : double
    - m_distanceAvertissement : double
    - m_actionAlerte : Action*
    - m_actionAvertissement : Action*
    - m_actionSecuritaire : Action*
    + ctor(p_detecteurDistance : DetecteurDistance*, p_distanceAlerte : double, p_distanceAvertissement : double, p_actionAlerte : Action*, p_actionAvertissement : Action*, p_actionSecuritaire : Action*)
}

Tache <|-- AlerteDistance
Tache <|-- DEL

AlerteDistance "1" -left-> "1" DetecteurDistance
AlerteDistance "1" -right-> "3" Action

@enduml